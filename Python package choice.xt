Folium:
Based on the JavaScript library Leaflet, Folium makes it easy to visualize data manipulated in Python on an interactive map.
It works seamlessly with both pandas and GeoPandas.
Example:
python
Copy code
import folium
m = folium.Map(location=[37.0902, -95.7129], zoom_start=5)  # Centered on the US
folium.Marker([latitude, longitude], tooltip='Your Data Point').add_to(m)
m.save('map.html')

Plotly:
Plotly offers a suite of web-based data visualization tools, and their Python API allows for interactive plotting.
With plotly.express, you can create scatter plots on mapbox layers to visualize geographical data.
python
Copy code
import plotly.express as px
fig = px.scatter_mapbox(data_frame=df, lat='latitude', lon='longitude', hover_name='Your Data Column')
fig.update_layout(mapbox_style="open-street-map")
fig.show()

Geopandas:
While GeoPandas can help you handle and analyze geographic data, it integrates well with other libraries like matplotlib and folium for visualization.
You can use it in combination with the contextily library to easily add basemaps to your plots.

Basemap:
Part of the Matplotlib toolkit, it's a bit older and may be considered less "user-friendly" than some other options. But, it's still powerful.
It allows you to create high-quality static maps.

Bokeh:
Bokeh is another interactive visualization library in Python. It's less dedicated to mapping than Folium, but it's very versatile and can create a wide variety of visualizations, including maps.
When choosing a library, consider your needs:

If you need a quick and interactive map, Folium or Plotly might be the way to go.
For more complex geographic analyses, you might lean on GeoPandas.
For high-quality static maps for a publication, Basemap might be suitable.